/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  OperationStore,
  OperationStoreInterface,
} from "../OperationStore";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "controller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operation",
        type: "address",
      },
    ],
    name: "OperationAllocated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "controller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operation",
        type: "address",
      },
    ],
    name: "OperationDeallocated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "controller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operation",
        type: "address",
      },
    ],
    name: "OperationFinished",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "controller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operation",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum IOperationStore.Queue",
        name: "from",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "enum IOperationStore.Queue",
        name: "to",
        type: "uint8",
      },
    ],
    name: "OperationFlushed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "controller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operation",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "autoFinish",
        type: "bool",
      },
    ],
    name: "OperationInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "controller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operation",
        type: "address",
      },
    ],
    name: "OperationRecovered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "controller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operation",
        type: "address",
      },
    ],
    name: "OperationStopped",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_opt",
        type: "address",
      },
    ],
    name: "allocate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "controller",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_opt",
        type: "address",
      },
    ],
    name: "deallocate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_opt",
        type: "address",
      },
    ],
    name: "finish",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IOperationStore.Queue",
        name: "_queue",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "flush",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "flushAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAvailableOperation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IOperationStore.Queue",
        name: "_queue",
        type: "uint8",
      },
    ],
    name: "getQueueSizeOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IOperationStore.Queue",
        name: "_queue",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "getQueuedOperationAt",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_opt",
        type: "address",
      },
    ],
    name: "getStatusOf",
    outputs: [
      {
        internalType: "enum IOperationStore.Status",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_opt",
        type: "address",
      },
    ],
    name: "halt",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_autoFinish",
        type: "bool",
      },
    ],
    name: "init",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "optStat",
    outputs: [
      {
        internalType: "enum IOperationStore.Status",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_opt",
        type: "address",
      },
    ],
    name: "recover",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_controller",
        type: "address",
      },
    ],
    name: "transferController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    name: "transferRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001961008e565b600080546001600160a01b0319166001600160a01b039290921691909117905561004161008e565b600180546001600160a01b0319166001600160a01b039290921691909117905561006961008e565b600280546001600160a01b0319166001600160a01b0392909216919091179055610092565b3390565b6113a2806100a16000396000f3fe608060405234801561001057600080fd5b50600436106101515760003560e01c80638da5cb5b116100cd578063f31766df11610081578063f77c479111610066578063f77c4791146102a2578063f887ea40146102aa578063ffd7d983146102b257610151565b8063f31766df1461026f578063f6b01b7e1461028257610151565b8063bd6acfa6116100b2578063bd6acfa614610236578063e8ea054b14610249578063f2fde38b1461025c57610151565b80638da5cb5b1461021b578063bb7de4ed1461022357610151565b8063364db0fc116101245780636b89bfc7116101095780636b89bfc7146101d55780637f0a0103146101f55780638cd738361461020857610151565b8063364db0fc146101a4578063382b997d146101b757610151565b80630cd865ec146101565780631eea74d01461016b578063268d79951461017e578063305ec69e14610191575b600080fd5b6101696101643660046110b6565b6102c5565b005b6101696101793660046110b6565b610355565b61016961018c3660046110b6565b6103dc565b61016961019f3660046110b6565b610445565b6101696101b23660046110b6565b61057f565b6101bf61064d565b6040516101cc9190611166565b60405180910390f35b6101e86101e33660046110b6565b610677565b6040516101cc91906111a0565b6101bf610203366004611117565b610699565b610169610216366004611140565b61071c565b6101bf61076f565b6101bf6102313660046110dd565b61077e565b610169610244366004611117565b610884565b6101696102573660046110b6565b61090b565b61016961026a3660046110b6565b610974565b6101e861027d3660046110b6565b6109dd565b6102956102903660046110fd565b6109f2565b6040516101cc919061136a565b6101bf610a54565b6101bf610a63565b6101696102c03660046110b6565b610a72565b6002546001600160a01b03166102d9610b33565b6001600160a01b0316146103085760405162461bcd60e51b81526004016102ff90611279565b60405180910390fd5b6001600160a01b038116600081815260036020526040808220805460ff191660051790555133917f8a33cae5e42ce7460f0f46db329f98dd6fe89fff2d4ae97603778766ce61692691a350565b6002546001600160a01b0316610369610b33565b6001600160a01b03161461038f5760405162461bcd60e51b81526004016102ff90611279565b6001600160a01b038116600081815260036020526040808220805460ff191660061790555133917fa3c3e48768cfe642836c679ba2a1a1f781c034d353b1fafe0a48c975e935471691a350565b6000546001600160a01b03166103f0610b33565b6001600160a01b0316146104165760405162461bcd60e51b81526004016102ff906111f6565b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b600061044f610b33565b6000549091506001600160a01b038083169116148061047b57506001546001600160a01b038281169116145b8061049357506002546001600160a01b038281169116145b6104af5760405162461bcd60e51b81526004016102ff906112d6565b6001600160a01b03821660009081526003602052604090205460ff1660028160068111156104d957fe5b14156104ed576104e883610a72565b610544565b60018160068111156104fb57fe5b141561052c576001600160a01b0383166000908152600360208190526040909120805460ff19169091179055610544565b60405162461bcd60e51b81526004016102ff9061130d565b6040516001600160a01b0384169033907f66de755bddecd98ad7c94151f7e1c29221ce757a88474993ed49a2da9266039690600090a3505050565b6002546001600160a01b0316610593610b33565b6001600160a01b0316146105b95760405162461bcd60e51b81526004016102ff90611279565b6001600160a01b03811660009081526003602052604081205460ff16908160068111156105e257fe5b14156105ff576105f3600483610b37565b506105ff600683610b53565b6001600160a01b038216600081815260036020526040808220805460ff191660041790555133917f4b60bd0a36d0234fcfd05c0678b7b1097dbfbb46467d95271f5bd1e30fcfd77b91a35050565b60006106596004610b66565b61066557506000610674565b61067160046000610b71565b90505b90565b6001600160a01b03811660009081526003602052604090205460ff165b919050565b6000808360038111156106a857fe5b14156106c0576106b9600483610b71565b9050610716565b60018360038111156106ce57fe5b14156106df576106b9600983610b7d565b60028360038111156106ed57fe5b14156106fe576106b9600683610b7d565b60405162461bcd60e51b81526004016102ff90611237565b92915050565b6002546001600160a01b0316610730610b33565b6001600160a01b0316146107565760405162461bcd60e51b81526004016102ff90611279565b610761600182610884565b61076c600282610884565b50565b6000546001600160a01b031681565b6001546000906001600160a01b0316610795610b33565b6001600160a01b0316146107bb5760405162461bcd60e51b81526004016102ff906111b4565b60006107c8600482610b71565b90506107d5600482610b37565b50821561080f576107e7600982610b53565b6001600160a01b0381166000908152600360205260409020805460ff19166001179055610833565b6001600160a01b0381166000908152600360205260409020805460ff191660021790555b806001600160a01b0316336001600160a01b03167f19b25c5802c45217559f3232c0e8539987229a217378721903778b547054a0d585604051610876919061117a565b60405180910390a392915050565b6002546001600160a01b0316610898610b33565b6001600160a01b0316146108be5760405162461bcd60e51b81526004016102ff90611279565b60018260038111156108cc57fe5b14156108e5576108e0600982610b89610cc5565b610907565b60028260038111156108f357fe5b14156106fe576108e0600682610d0a610cc5565b5050565b6000546001600160a01b031661091f610b33565b6001600160a01b0316146109455760405162461bcd60e51b81526004016102ff906111f6565b6002805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6000546001600160a01b0316610988610b33565b6001600160a01b0316146109ae5760405162461bcd60e51b81526004016102ff906111f6565b6000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b60036020526000908152604090205460ff1681565b600080826003811115610a0157fe5b1415610a1857610a116004610b66565b9050610694565b6001826003811115610a2657fe5b1415610a3657610a116009610e0e565b6002826003811115610a4457fe5b14156106fe57610a116006610e0e565b6002546001600160a01b031681565b6001546001600160a01b031681565b6000610a7c610b33565b6000549091506001600160a01b0380831691161480610aa857506001546001600160a01b038281169116145b80610ac057506002546001600160a01b038281169116145b610adc5760405162461bcd60e51b81526004016102ff906112d6565b610ae7600483610e19565b506001600160a01b038216600081815260036020526040808220805460ff191690555133917fb1b4229c8cfa1e61f539453590690e94705723ffa435a4fde030bab33ee11b2791a35050565b3390565b6000610b4c836001600160a01b038416610e2e565b9392505050565b610907826001600160a01b038316610ef4565b600061071682610f1b565b6000610b4c8383610f1f565b6000610b4c8383610f83565b600080610b968382610b7d565b6001600160a01b03811660009081526003602081905260409091205491925060ff90911690816006811115610bc757fe5b1415610c4157610be1610bd985610f9b565b600490610e19565b506001600160a01b038216600081815260036020526040808220805460ff191690555133917f267d37fcade2d3733b0f2ef19191bd575de161bf2c6fd0fb4650283630c4721091610c3491600191611185565b60405180910390a3610cbb565b6004816006811115610c4f57fe5b1415610cb057610c69610c6185610f9b565b600690610b53565b816001600160a01b0316336001600160a01b03167f267d37fcade2d3733b0f2ef19191bd575de161bf2c6fd0fb4650283630c4721060016002604051610c34929190611185565b600092505050610694565b5060019392505050565b60005b82811015610d0357610cd984610fa6565b15610ce45750610d05565b610cf1848363ffffffff16565b610cfb5750610d05565b600101610cc8565b505b505050565b600080610d178382610b7d565b6001600160a01b03811660009081526003602052604090205490915060ff166005816006811115610d4457fe5b1415610da957610d56610bd985610f9b565b506001600160a01b038216600081815260036020526040808220805460ff191690555133917f267d37fcade2d3733b0f2ef19191bd575de161bf2c6fd0fb4650283630c4721091610c3491600291611185565b6006816006811115610db757fe5b1415610cb057610dc684610f9b565b50816001600160a01b0316336001600160a01b03167f267d37fcade2d3733b0f2ef19191bd575de161bf2c6fd0fb4650283630c4721060026003604051610c34929190611185565b600061071682610fb1565b6000610b4c836001600160a01b038416610fb8565b60008181526001830160205260408120548015610eea5783546000198083019190810190600090879083908110610e6157fe5b9060005260206000200154905080876000018481548110610e7e57fe5b600091825260208083209091019290925582815260018981019092526040902090840190558654879080610eae57fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050610716565b6000915050610716565b60018083018054845401600090815260029094016020526040909320919091558154019055565b5490565b81546000908210610f615760405162461bcd60e51b81526004018080602001828103825260228152602001806113746022913960400191505060405180910390fd5b826000018281548110610f7057fe5b9060005260206000200154905092915050565b81540160009081526002909101602052604090205490565b600061071682611002565b600061071682611087565b6001015490565b6000610fc4838361108f565b610ffa57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610716565b506000610716565b600061100d82611087565b1561105f576040805162461bcd60e51b815260206004820152601560248201527f53746451756575653a20656d7074792071756575650000000000000000000000604482015290519081900360640190fd5b600061106c836000610f83565b83546001908101855584018054600019019055915050919050565b600101541590565b60009081526001919091016020526040902054151590565b80356004811061069457600080fd5b6000602082840312156110c7578081fd5b81356001600160a01b0381168114610b4c578182fd5b6000602082840312156110ee578081fd5b81358015158114610b4c578182fd5b60006020828403121561110e578081fd5b610b4c826110a7565b60008060408385031215611129578081fd5b611132836110a7565b946020939093013593505050565b600060208284031215611151578081fd5b5035919050565b6004811061116257fe5b9052565b6001600160a01b0391909116815260200190565b901515815260200190565b604081016111938285611158565b610b4c6020830184611158565b60208101600783106111ae57fe5b91905290565b60208082526022908201527f4f7065726174696f6e41434c3a20726f75746572206163636573732064656e69604082015261195960f21b606082015260800190565b60208082526021908201527f4f7065726174696f6e41434c3a206f776e6572206163636573732064656e69656040820152601960fa1b606082015260800190565b60208082526022908201527f4f7065726174696f6e53746f72653a20696e76616c6964207175657565207479604082015261706560f01b606082015260800190565b60208082526026908201527f4f7065726174696f6e41434c3a20636f6e74726f6c6c6572206163636573732060408201527f64656e6965640000000000000000000000000000000000000000000000000000606082015260800190565b60208082526014908201527f4f7065726174696f6e41434c3a2064656e696564000000000000000000000000604082015260600190565b6020808252602e908201527f526f757465723a20696e76616c696420636f6e646974696f6e20666f7220666960408201527f6e697368206f7065726174696f6e000000000000000000000000000000000000606082015260800190565b9081526020019056fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473a164736f6c6343000705000a";

export class OperationStore__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OperationStore> {
    return super.deploy(overrides || {}) as Promise<OperationStore>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): OperationStore {
    return super.attach(address) as OperationStore;
  }
  connect(signer: Signer): OperationStore__factory {
    return super.connect(signer) as OperationStore__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OperationStoreInterface {
    return new utils.Interface(_abi) as OperationStoreInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OperationStore {
    return new Contract(address, _abi, signerOrProvider) as OperationStore;
  }
}
