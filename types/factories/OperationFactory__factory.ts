/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  OperationFactory,
  OperationFactoryInterface,
} from "../OperationFactory";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "instance",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "controller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "terraAddress",
        type: "bytes32",
      },
    ],
    name: "ContractDeployed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_optId",
        type: "uint256",
      },
    ],
    name: "build",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "controller",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchAddressBufferSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchNextTerraAddress",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "address",
        name: "_controller",
        type: "address",
      },
      {
        internalType: "address",
        name: "_operation",
        type: "address",
      },
    ],
    name: "pushStandardOperation",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_addrs",
        type: "bytes32[]",
      },
    ],
    name: "pushTerraAddresses",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "standardIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "standards",
    outputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        internalType: "address",
        name: "controller",
        type: "address",
      },
      {
        internalType: "address",
        name: "operation",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_controller",
        type: "address",
      },
    ],
    name: "transferController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    name: "transferRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600060035534801561001557600080fd5b5061001e610093565b600080546001600160a01b0319166001600160a01b0392909216919091179055610046610093565b600180546001600160a01b0319166001600160a01b039290921691909117905561006e610093565b600280546001600160a01b0319166001600160a01b0392909216919091179055610097565b3390565b610c8a806100a66000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c8063987473231161008c578063e8ea054b11610066578063e8ea054b1461029a578063f2fde38b146102c0578063f77c4791146102e6578063f887ea40146102ee576100df565b80639874732314610242578063b1af34031461028a578063b27f681e14610292576100df565b806377fc2b19116100bd57806377fc2b19146101f957806387463cc5146102325780638da5cb5b1461023a576100df565b8063210f25f4146100e4578063268d79951461012e5780632ed7393214610156575b600080fd5b61011c600480360360608110156100fa57600080fd5b506001600160a01b0381358116916020810135821691604090910135166102f6565b60408051918252519081900360200190f35b6101546004803603602081101561014457600080fd5b50356001600160a01b03166103c5565b005b6101546004803603602081101561016c57600080fd5b81019060208101813564010000000081111561018757600080fd5b82018360208201111561019957600080fd5b803590602001918460208302840111640100000000831117156101bb57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550610421945050505050565b6102166004803603602081101561020f57600080fd5b503561049b565b604080516001600160a01b039092168252519081900360200190f35b61011c6107df565b6102166107e5565b61025f6004803603602081101561025857600080fd5b50356107f4565b604080516001600160a01b039485168152928416602084015292168183015290519081900360600190f35b61011c610822565b61011c610834565b610154600480360360208110156102b057600080fd5b50356001600160a01b0316610840565b610154600480360360208110156102d657600080fd5b50356001600160a01b031661089c565b6102166108f8565b610216610907565b600080546001600160a01b031661030b610916565b6001600160a01b03161461033a5760405162461bcd60e51b815260040161033190610be3565b60405180910390fd5b5060038054604080516060810182526001600160a01b038088168252868116602080840191825287831684860190815260008781526004909252949020925183549083166001600160a01b0319918216178455905160018085018054928516928416929092179091559351600290930180549390921692169190911790558254019091559392505050565b6000546001600160a01b03166103d9610916565b6001600160a01b0316146103ff5760405162461bcd60e51b815260040161033190610be3565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b0316610435610916565b6001600160a01b03161461045b5760405162461bcd60e51b815260040161033190610be3565b60005b81518110156104975761048e82828151811061047657fe5b6020026020010151600561091a90919063ffffffff16565b5060010161045e565b5050565b6000806104a6610916565b6000549091506001600160a01b03808316911614806104d257506001546001600160a01b038281169116145b806104ea57506002546001600160a01b038281169116145b6105065760405162461bcd60e51b815260040161033190610c24565b600061051061092f565b905061051a610bc3565b506000848152600460209081526040808320815160608101835281546001600160a01b039081168252600183015481169482019490945260029091015490921690820181905290919061056c90610950565b9050606082604001516001600160a01b031663c93bd38b84600001518560200151876040518463ffffffff1660e01b815260040180846001600160a01b03168152602001836001600160a01b03168152602001828152602001935050505060006040518083038186803b1580156105e257600080fd5b505afa1580156105f6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561061f57600080fd5b810190808051604051939291908464010000000082111561063f57600080fd5b90830190602082018581111561065457600080fd5b825164010000000081118282018810171561066e57600080fd5b82525081516020918201929091019080838360005b8381101561069b578181015183820152602001610683565b50505050905090810190601f1680156106c85780820380516001836020036101000a031916815260200191505b50604081905263439fab9160e01b81526020600482018181528651602484015286519697506001600160a01b0389169663439fab91965088955090935083926044019185019080838360005b8381101561072c578181015183820152602001610714565b50505050905090810190601f1680156107595780820380516001836020036101000a031916815260200191505b5092505050600060405180830381600087803b15801561077857600080fd5b505af115801561078c573d6000803e3d6000fd5b505050508383602001516001600160a01b0316836001600160a01b03167f41a1a1e5033fb48fa68ae6842ead9050d540ddf76974d1cee54faf540d1f49e660405160405180910390a45095945050505050565b60035481565b6000546001600160a01b031681565b6004602052600090815260409020805460018201546002909201546001600160a01b03918216928216911683565b600061082f600582610a10565b905090565b600061082f6005610a1c565b6000546001600160a01b0316610854610916565b6001600160a01b03161461087a5760405162461bcd60e51b815260040161033190610be3565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03166108b0610916565b6001600160a01b0316146108d65760405162461bcd60e51b815260040161033190610be3565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6002546001600160a01b031681565b6001546001600160a01b031681565b3390565b60006109268383610a27565b90505b92915050565b60008061093d600582610a10565b905061094a600582610a71565b50905090565b60006040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528260601b60148201527f5af43d82803e903d91602b57fd5bf3000000000000000000000000000000000060288201526037816000f09150506001600160a01b038116610a0b576040805162461bcd60e51b815260206004820152601660248201527f455243313136373a20637265617465206661696c656400000000000000000000604482015290519081900360640190fd5b919050565b60006109268383610a7d565b600061092982610ae1565b6000610a338383610ae5565b610a6957508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610929565b506000610929565b60006109268383610afd565b81546000908210610abf5760405162461bcd60e51b8152600401808060200182810382526022815260200180610c5c6022913960400191505060405180910390fd5b826000018281548110610ace57fe5b9060005260206000200154905092915050565b5490565b60009081526001919091016020526040902054151590565b60008181526001830160205260408120548015610bb95783546000198083019190810190600090879083908110610b3057fe5b9060005260206000200154905080876000018481548110610b4d57fe5b600091825260208083209091019290925582815260018981019092526040902090840190558654879080610b7d57fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050610929565b6000915050610929565b604080516060810182526000808252602082018190529181019190915290565b60208082526021908201527f4f7065726174696f6e41434c3a206f776e6572206163636573732064656e69656040820152601960fa1b606082015260800190565b60208082526014908201527f4f7065726174696f6e41434c3a2064656e69656400000000000000000000000060408201526060019056fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473a164736f6c6343000705000a";

export class OperationFactory__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OperationFactory> {
    return super.deploy(overrides || {}) as Promise<OperationFactory>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): OperationFactory {
    return super.attach(address) as OperationFactory;
  }
  connect(signer: Signer): OperationFactory__factory {
    return super.connect(signer) as OperationFactory__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OperationFactoryInterface {
    return new utils.Interface(_abi) as OperationFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OperationFactory {
    return new Contract(address, _abi, signerOrProvider) as OperationFactory;
  }
}
